services:
  mysql:
    image: mysql:latest
    env_file:
      - .env
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pkrissbui123"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s # Allow MySQL time to initialize
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    ports:
      - "3001:3001"
    volumes:
      - ./apps/auth:/usr/src/app/apps/auth
      - ./libs:/usr/src/app/libs
      - /usr/src/app/node_modules
    env_file:
      - ./apps/auth/.env
    depends_on:
      mysql:
        condition: service_healthy # Wait for MySQL to be healthy
  reservations:
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    command: pnpm run start:dev reservations
    ports:
      - "3000:3000"
      - "9929:9929"
    env_file:
      - ./apps/reservations/.env
    volumes:
      - ./apps/reservations:/usr/src/app/apps/reservations
      - ./libs:/usr/src/app/libs
      - /usr/src/app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
  payments:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: pnpm run start:dev payments
    ports:
      - "3003:3003"
    volumes:
      - ./apps/payments:/usr/src/app/apps/payments
      - ./libs:/usr/src/app/libs
      - /usr/src/app/node_modules
    env_file:
      - ./apps/payments/.env
    depends_on:
      mysql:
        condition: service_healthy
  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: pnpm run start:dev notifications
    ports:
      - "3004:3004"
    volumes:
      - ./apps/notifications:/usr/src/app/apps/notifications
      - ./libs:/usr/src/app/libs
      - /usr/src/app/node_modules
    env_file:
      - ./apps/notifications/.env
    depends_on:
      mysql:
        condition: service_healthy